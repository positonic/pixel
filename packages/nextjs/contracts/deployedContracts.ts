/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    WETH9: {
      address: "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "src",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "guy",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "dst",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "src",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "dst",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "src",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Withdrawal",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "guy",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dst",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "src",
              type: "address",
            },
            {
              internalType: "address",
              name: "dst",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "wad",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
    },
    MockRoyaltyEngineV1: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_royalty1",
              type: "address",
            },
            {
              internalType: "address",
              name: "_royalty2",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "getRoyaltyView",
          outputs: [
            {
              internalType: "address payable[]",
              name: "recipients",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "amounts",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "royalty1",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "royalty2",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
    },
    Nix: {
      address: "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_weth",
              type: "address",
            },
            {
              internalType: "address",
              name: "_royaltyEngine",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "CannotExecuteOwnOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "DuplicateOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "InputArraysMismatch",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "int256",
              name: "computedNetAmount",
              type: "int256",
            },
            {
              internalType: "int256",
              name: "netAmount",
              type: "int256",
            },
          ],
          name: "NetAmountMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "NotERC165",
          type: "error",
        },
        {
          inputs: [],
          name: "NotERC721",
          type: "error",
        },
        {
          inputs: [],
          name: "NotMaker",
          type: "error",
        },
        {
          inputs: [],
          name: "NotOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "specifiedTaker",
              type: "address",
            },
          ],
          name: "OrderCanOnlyBeExecutedBySpecifiedTaker",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
          ],
          name: "OrderExpired",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tradeCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tradeMax",
              type: "uint256",
            },
          ],
          name: "OrderMaxxed",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyAttempted",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "recipientsLength",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amountsLength",
              type: "uint256",
            },
          ],
          name: "RoyaltyEngineResultsLengthMismatch",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "royalty",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "max",
              type: "uint256",
            },
          ],
          name: "RoyaltyOverMax",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "TokenIdNotFound",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "orderTokenIds",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "executeTokenIds",
              type: "uint256[]",
            },
          ],
          name: "TokenIdsMismatch",
          type: "error",
        },
        {
          inputs: [],
          name: "TokenIdsMustBeSortedWithNoDuplicates",
          type: "error",
        },
        {
          inputs: [],
          name: "TokenIdsMustBeSpecifiedForBuyOrSellAll",
          type: "error",
        },
        {
          inputs: [],
          name: "TokenIdsNotSpecified",
          type: "error",
        },
        {
          inputs: [],
          name: "TradeMaxMustBeZeroOrOneForBuyOrSellAll",
          type: "error",
        },
        {
          inputs: [],
          name: "WETHTransferFailure",
          type: "error",
        },
        {
          inputs: [],
          name: "WETHTransferFromFailure",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
          ],
          name: "OrderAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tradeIndex",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "tokenIds",
              type: "uint256[]",
            },
          ],
          name: "OrderExecuted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
          ],
          name: "OrderPriceAndExpiryUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
          ],
          name: "OrderUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "tip",
              type: "uint256",
            },
          ],
          name: "ThankYou",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenIndex",
              type: "uint256",
            },
          ],
          name: "TokenAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokens",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Withdrawn",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "enum Nix.BuyOrSell",
              name: "buyOrSell",
              type: "uint8",
            },
            {
              internalType: "enum Nix.AnyOrAll",
              name: "anyOrAll",
              type: "uint8",
            },
            {
              internalType: "uint256[]",
              name: "tokenIds",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tradeMax",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "royaltyFactor",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "integrator",
              type: "address",
            },
          ],
          name: "addOrder",
          outputs: [
            {
              internalType: "uint64",
              name: "orderIndex",
              type: "uint64",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "tokenList",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "orderIndexes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[][]",
              name: "tokenIdsList",
              type: "uint256[][]",
            },
            {
              internalType: "int256",
              name: "netAmount",
              type: "int256",
            },
            {
              internalType: "uint256",
              name: "royaltyFactor",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "integrator",
              type: "address",
            },
          ],
          name: "executeOrders",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getLengths",
          outputs: [
            {
              internalType: "uint256",
              name: "_tokensLength",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_tradesLength",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
          ],
          name: "getOrder",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "maker",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "taker",
                  type: "address",
                },
                {
                  internalType: "enum Nix.BuyOrSell",
                  name: "buyOrSell",
                  type: "uint8",
                },
                {
                  internalType: "enum Nix.AnyOrAll",
                  name: "anyOrAll",
                  type: "uint8",
                },
                {
                  internalType: "bytes32",
                  name: "tokenIdsKey",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint64",
                  name: "expiry",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "tradeCount",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "tradeMax",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "royaltyFactor",
                  type: "uint64",
                },
              ],
              internalType: "struct Nix.Order",
              name: "order",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenIndex",
              type: "uint256",
            },
          ],
          name: "getToken",
          outputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint64",
              name: "_ordersLength",
              type: "uint64",
            },
            {
              internalType: "uint64",
              name: "executed",
              type: "uint64",
            },
            {
              internalType: "uint64",
              name: "volumeToken",
              type: "uint64",
            },
            {
              internalType: "uint256",
              name: "volumeWeth",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "tokenIdsKey",
              type: "bytes32",
            },
          ],
          name: "getTokenIds",
          outputs: [
            {
              internalType: "uint256[]",
              name: "tokenIds",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tradeIndex",
              type: "uint256",
            },
          ],
          name: "getTrade",
          outputs: [
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "uint64",
              name: "royaltyFactor",
              type: "uint64",
            },
            {
              internalType: "uint64",
              name: "blockNumber",
              type: "uint64",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "token",
                  type: "address",
                },
                {
                  internalType: "uint64",
                  name: "orderIndex",
                  type: "uint64",
                },
              ],
              internalType: "struct Nix.ExecutedOrder[]",
              name: "executedOrders",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "onERC721Received",
          outputs: [
            {
              internalType: "bytes4",
              name: "",
              type: "bytes4",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "ordersLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "royaltyEngine",
          outputs: [
            {
              internalType: "contract IRoyaltyEngineV1Partial",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "tokenIds",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "int256",
              name: "tradeMaxAdjustment",
              type: "int256",
            },
            {
              internalType: "uint256",
              name: "royaltyFactor",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "integrator",
              type: "address",
            },
          ],
          name: "updateOrder",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "orderIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "integrator",
              type: "address",
            },
          ],
          name: "updateOrderPriceAndExpiry",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "weth",
          outputs: [
            {
              internalType: "contract IERC20Partial",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokens",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
    },
    YourContract: {
      address: "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
